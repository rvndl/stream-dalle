generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  logs          Logs[]

  APIKey     String?
  rewardId   String?
  imageSize  String  @default("1024x1024")
  connected  Boolean @default(false)
  showAuthor Boolean @default(true)
  showPrompt Boolean @default(true)
  showFrame  Boolean @default(true)
  showTime   Int     @default(10000)
  onResub    Boolean @default(false)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Logs {
  id        String    @id @default(cuid())
  userName  String
  redeemer  String
  status    LogStatus @default(UNKNOWN)
  url       String?
  prompt    String?
  createdAt DateTime  @default(now())

  user User? @relation(fields: [userName], references: [name])
}

enum LogStatus {
  UNKNOWN
  SUCCESS
  FAILURE
}
